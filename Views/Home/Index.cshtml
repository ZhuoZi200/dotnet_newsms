@{
    ViewBag.Title = "Home Page";
    Layout = null;

}
@Styles.Render("~/Content/index-home.css")
@Styles.Render("~/Content/bootstrap.min.css")
<link href="~/node_modules/bootstrapvalidator/dist/css/bootstrapvalidator.min.css" rel="stylesheet">

<div class="container-fluid all">
    <div class="login-content">
        <div class="login-header">
            <img src="~/Content/img/logo.jpg" alt="Alternate Text" />
            <div class="switch-btn">
                <button class="on" type="button">登录</button>
                <button type="button">注册</button>
            </div>
        </div>
        <form class="login-body login-body-0">
            <div class="form-group">
                <div class="input-group input-group-lg">
                    <input class="form-control" type="text" name="iusername" placeholder="用户名" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                </div>
            </div>
            <div class="form-group">
                <div class="input-group input-group-lg">
                    <input class="form-control" type="password" name="ipassword" placeholder="密码" />
                    <span class="input-group-addon"><i class="glyphicon glyphicon-barcode"></i></span>
                </div>
            </div>           

            <button class="btn btn-primary btn-block btn-lg" type="submit" disabled>登录</button>
        </form>

        <form class="login-body login-body-1" action="/Home/Index" method="post">
            <div class="form-group">
                <input class="form-control" type="text" name="Nickname" placeholder="用户名" />
            </div>
            <div class="form-group">
                <input class="form-control" type="password" name="Password" placeholder="密码" />
            </div>
            <div class="form-group">
                <input class="form-control" type="password" name="ComfirmPassword" placeholder="确认密码" />
            </div>

            <button class="btn btn-primary btn-block btn-lg" type="submit">注册</button>
        </form>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/node_modules/bootstrapvalidator/dist/js/bootstrapvalidator.min.js"></script>
<script>
    const aSwitchBtn = document.querySelectorAll('.switch-btn button');
    const loginBtn = document.querySelector('.switch-btn button:first-child');
    const regisBtn = document.querySelector('.switch-btn button:last-child');
    const loginForm = document.querySelector('.login-content form:first-of-type');
    const regisForm = document.querySelector('.login-content form:last-of-type');

    for (var i = 0; i < aSwitchBtn.length; i++) {
        aSwitchBtn[i].addEventListener('click', function () {
            for (var j = 0; j < aSwitchBtn.length; j++) {
                aSwitchBtn[j].classList.remove('on');
            }
            this.classList.add('on');
        })
    }

    loginBtn.addEventListener('click', _ => {
        loginForm.style.display = 'block';
        regisForm.style.display = 'none';
    })

    regisBtn.addEventListener('click', _ => {
        loginForm.style.display = 'none';
        regisForm.style.display = 'flex';
    })

    // 注册部分
    //const nickName = document.querySelector('.login-body-1 .form-group:nth-of-type(1) input');
    //const pwd = document.querySelector('.login-body-1 .form-group:nth-of-type(2) input');
    //const conPwd = document.querySelector('.login-body-1 .form-group:nth-of-type(3) input');
    //const regisSubmit = document.querySelector('.login-body-1 button');
    //const aInput = document.querySelectorAll('.login-body-1 .form-group input');

    //for (var i = 0; i < aInput.length; i++) {
    //    aInput[i].onblur = function () {
    //        console.log(aInput[i])
    //        for (var j = 0; j < aInput.length; j++) {
    //            if (aInput[i].value == '') {
    //                regisSubmit.disabled = true;
    //                break;
    //            }
    //        }
    //    }
    //}
    // ajax提交注册
    //let data = {}
    //regisSubmit.addEventListener('click', function () {
    //    data.nickName = nickName.value;
    //    data.pwd = pwd.value;
    //     注册检查两次密码是否一致
    //    if (pwd.value == conPwd.value) {
    //        ajax('/Home/Index', data)
    //        .then(res => {
    //            window.location.reload()
    //        })
    //        .catch(err => {
    //            console.log(err);
    //        })
    //    }
    //})

    //function ajax(url, data) {
    //    return new Promise(resolve => {
    //        const xhr = new XMLHttpRequest();
    //        xhr.open('POST', url);
    //        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    //        xhr.onreadystatechange = function () {
    //            if (xhr.readyState == 4 && xhr.status == 200) resolve();
    //        }
    //        console.log(data)
    //        xhr.send(`Nickname=${data.nickName}&Password=${data.pwd}`);
    //    })
    //}

    // 表单验证
    $('form.login-body-0').bootstrapValidator({
        // 默认的提示消息
        message: 'This value is not valid',
        // 表单框里右侧的icon
        submitHandler: function (validator, form, submitButton) {
            // 表单提交成功时会调用此方法
            // validator: 表单验证实例对象
            // form  jq对象  指定表单对象
            // submitButton  jq对象  指定提交按钮的对象
        },
        fields: {
            iusername: {
                message: '用户名验证失败',
                validators: {
                    notEmpty: {
                        message: '用户名不能为空'
                    },
                    //stringLength: { //长度限制
                    //    min: 6,
                    //    max: 18,
                    //    message: '用户名长度必须在6到18位之间'
                    //},
                    //regexp: { //正则表达式
                    //    regexp: /^[a-zA-Z0-9_]+$/,
                    //    message: '用户名只能包含大写、小写、数字和下划线'
                    //}
                }
            },
            ipassword: {
                validators: {
                    notEmpty: {
                        message: '密码不能为空'
                    },
                    //regexp: { //正则表达式
                    //    regexp: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/,
                    //    message: '密码至少包含 数字和英文，长度6-20'
                    //}
                }
            }
        }
    });

    $('form.login-body-1').bootstrapValidator({
        // 表单框里右侧的icon
        submitHandler: function (validator, form, submitButton) {
            // 表单提交成功时会调用此方法
            // validator: 表单验证实例对象
            // form  jq对象  指定表单对象
            // submitButton  jq对象  指定提交按钮的对象
        },
        fields: {
            Nickname: {
                message: '用户名验证失败',
                validators: {
                    notEmpty: {
                        message: '用户名不能为空'
                    },
                    stringLength: { //长度限制
                        min: 6,
                        max: 18,
                        message: '用户名长度必须在6到18位之间'
                    },
                    regexp: { //正则表达式
                        regexp: /^[a-zA-Z0-9_]+$/,
                        message: '用户名只能包含大写、小写、数字和下划线'
                    }
                }
            },
            Password: {
                validators: {
                    notEmpty: {
                        message: '密码不能为空'
                    },
                    regexp: { //正则表达式
                        regexp: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/,
                        message: '密码至少包含 数字和英文，长度6-20'
                    }
                }
            },
            ComfirmPassword: {
                validators: {
                    notEmpty: {
                        message: '请再次输入密码'
                    },
                    identical: {  //比较是否相同
                        field: 'Password',  //需要进行比较的input name值
                        message: '两次密码不一致'
                    }
                }
            }
        }
    });
</script>
@*
    <div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>

    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>
*@